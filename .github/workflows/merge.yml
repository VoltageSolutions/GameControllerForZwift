name: CD Workflow

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  # -------------------------
  # 1. Publish Job (Framework-Dependent Build)
  # -------------------------
  publish-framework:
    name: Publish Release
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Publish Framework-Dependent Build
      run: |
        mkdir ./artifacts/framework-dependent
        dotnet publish GameControllerForZwift_TestsExcluded.slnf -c Release -o ./artifacts/framework-dependent
        Get-ChildItem ./artifacts/framework-dependent -Recurse | Where-Object { $_.Extension -ne ".pdb" } | Compress-Archive -DestinationPath ./artifacts/gamecontrollerforzwift.zip

    # Self-Contained Build
    # - name: Publish Self-Contained Build
    #   run: |
    #     mkdir ./artifacts/self-contained
    #     dotnet publish GameControllerForZwift_TestsExcluded.slnf -c Release -r win-x64 --self-contained true -o ./artifacts/self-contained
    #     Compress-Archive -Path ./artifacts/self-contained/* -DestinationPath ./artifacts/gamecontrollerforzwift_with_runtime.zip

  # -------------------------
  # 2. Create Release and Upload Artifacts
  # -------------------------
  release:
    name: Deploy Release to GitHub
    runs-on: windows-latest
    needs: publish-framework  # Ensure the publish job completes before creating release

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v${{ env.VERSION }}'
        release_name: 'Release v${{ env.VERSION }}'
        draft: false
        prerelease: false

    - name: Upload Framework-Dependent Build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/gamecontrollerforzwift.zip
        asset_name: gamecontrollerforzwift.zip
        asset_content_type: application/zip

    # Upload Self-Contained Build
    # - name: Upload Self-Contained Build
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./artifacts/gamecontrollerforzwift_with_runtime.zip
    #     asset_name: gamecontrollerforzwift_with_runtime.zip
    #     asset_content_type: application/zip