name: Build and Test

on:
  pull_request:
    branches:
      - '*'

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x' 

    - name: Restore dependencies
      run: dotnet restore

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
        source-root: './src/'

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with coverage
      run: dotnet test --configuration Release --no-build --verbosity normal -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput=TestResults/coverage.cobertura.xml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage
        path: TestResults/coverage.cobertura.xml

    # Generate and post coverage summary
    - name: Generate Coverage Summary
      id: generate-summary
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:TestResults/coverage.cobertura.xml -reporttypes:Summary -targetdir:coverage-summary
        # Check if the report file was generated
        if (Test-Path "coverage-summary/coverage-summary.txt") {
          $coverage_summary = Get-Content "coverage-summary/coverage-summary.txt" -Raw
          echo "coverage_summary=$coverage_summary" >> $env:GITHUB_ENV
        } else {
          echo "No coverage summary generated" >> $env:GITHUB_ENV
        }

    # Post Coverage Summary to the PR
    - name: Post Coverage Summary to PR
      uses: actions/github-script@v6
      with:
        script: |
          const coverageSummary = process.env.coverage_summary;
          const prNumber = github.context.payload.pull_request.number;
          const commentBody = `### Code Coverage Summary:\n\n\`\`\`\n${coverageSummary}\n\`\`\``;

          await github.rest.issues.createComment({
            issue_number: prNumber,
            owner: github.context.repo.owner,
            repo: github.context.repo.repo,
            body: commentBody
          });
