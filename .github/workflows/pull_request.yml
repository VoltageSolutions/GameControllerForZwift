name: Build and Test

on:
  pull_request:
    branches:
      - '*'  # Run on PRs to any branch

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
        source-root: './src/'

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with coverage
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory:TestResults

    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Coverage Report
      run: |
        reportgenerator -reports:TestResults/**/coverage.cobertura.xml -targetdir:TestResults/coverage-report -reporttypes:"HtmlInline_AzurePipelines;Cobertura"

    - name: Upload Coverage Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: TestResults/coverage-report

    - name: Upload Cobertura XML Report
      uses: actions/upload-artifact@v3
      with:
        name: cobertura-xml-report
        path: TestResults/coverage-report/Cobertura.xml