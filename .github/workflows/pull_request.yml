name: pr

on:
  pull_request:
    branches:
      - '**'

permissions:
  contents: read
  checks: write
  security-events: write

jobs:
  # ------------------------
  # 1. Build Job
  # ------------------------
  build:
    name: Build
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          **/bin/Release
          **/obj

  # ------------------------
  # 2. Test Job
  # ------------------------
  test:
    name: Test
    runs-on: windows-latest
    needs: build  # Wait for the build job to complete

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .

    - name: Restore dependencies
      run: dotnet restore

    - name: Run tests with XPlat Code Coverage
      #run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory:TestResults
      run: dotnet test --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=TestResults.trx"


    - name: Upload Test Results as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: test-artifacts
        #path: ${{ github.workspace }}\TestResults\**\*
        path: "**/TestResults.trx"

  # ------------------------
  # 3. CodeQL Analysis Job
  # ------------------------
  analyze:
    name: Analyze
    runs-on: windows-latest
    needs: build  # Wait for the build job to complete

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'csharp'

    # This seems redundant, maybe we can improve and eliminate this step
    - name: Build solution for CodeQL
      run: dotnet build --configuration Release --no-restore

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # ------------------------
  # 4. Report Job (Ubuntu Runner)
  # ------------------------
  report:
    name: Report
    runs-on: ubuntu-latest
    needs: [test]  # Wait for the test job to complete

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Test Artifacts
      uses: actions/download-artifact@v3
      with:
        name: test-artifacts
        path: TestResults

  # Report test results using dorny/test-reporter with dotnet-trx
    - name: Report Test Results
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: TestResults/**/TestResults.trx
        reporter: dotnet-trx

    # Upload coverage data (cobertura.xml files) to be processed by GitHub
    # - name: Upload coverage data as artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: coverage-data
    #     path: TestResults/**/coverage.cobertura.xml

    # Prepare a human-readable report and upload it
    # - name: Install ReportGenerator
    #   run: dotnet tool install --global dotnet-reportgenerator-globaltool

    # - name: Generate Coverage Report
    #   run: reportgenerator -reports:TestResults/**/coverage.cobertura.xml -targetdir:TestResults/coverage-report -reporttypes:"HtmlInline_AzurePipelines;Cobertura"

    # - name: Upload Coverage Report
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: coverage-report
    #     path: TestResults/coverage-report