name: CI Workflow

on:
  pull_request:
    branches:
      - '**'

permissions:
  contents: read
  checks: write
  security-events: write

jobs:
  test:
    name: Run Tests with Coverage
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'csharp'

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run tests, collect as TRX to support dorny test reporter
      run: dotnet test --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=TestResults.trx"

    - name: Run tests, collect with XPlat Code Coverage to support CodeCov
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory:TestResults
    
     # Report test results using dorny/test-reporter with dotnet-trx
    - name: Report Test Results
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: {{ github.workspace }}\TestResults\**\TestResults.trx
        reporter: dotnet-trx

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Coverage Report
      run: reportgenerator -reports:TestResults/**/coverage.cobertura.xml -targetdir:TestResults/CoverageReport -reporttypes:"HtmlInline_AzurePipelines;Cobertura"

    - name: Upload coverage to CodeCov
      uses: codecov/codecov-action@v5
      with:
        files: {{ github.workspace }}\TestResults\CoverageReport\Cobertura.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3